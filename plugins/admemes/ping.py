"""Telegram Ping / Pong Speed
Syntax: .ping"""

import time
import random
from pyrogram import Client, filters
from info import COMMAND_HAND_LER
from plugins.helper_functions.cust_p_filters import f_onw_fliter

# -- Constants -- #
ALIVE = "เดเดคเตเดคเดฟเดเตเดเดฟเดฒเตเดฒ เดฎเตเดคเตเดคเต เดเดตเดฟเดเต เดคเดจเตเดจเต เดเดฃเตเดเต.. เดจเดฟเดจเดเตเดเต เดเดชเตเดชเต เดเดจเตเดจเตเดเต เดเดฐเต เดธเตเดจเตเดนเดตเตเด เดเดฒเตเดฒ. เดเตเดณเตเดณเดพเด.. เดจเต เดชเดพเดดเต เดชเตเดฒเตเดฏเต เดเดฒเตเดฒ เดฎเดพเดฑเดฟเดชเตเดฏเดฟ..๐ เดเดเดเตเดเต เดเดเตเดเดฟเดฒเตเด เดเตเดฎเตเดฎเดพ เดเดจเตเดจเต /start เดเตเดฏเตเดคเต เดจเตเดเตเดเต..๐" 
ADMIN = "<b>๐ผ๐๐ผ ๐ฐ๐ณ๐ผ๐ธ๐ฝ โบโบ https://t.me/MSMadminBot</b>"
CHANNEL = "<b>๐๐ฟ๐ณ๐ฐ๐๐ด๐ ๐ฒ๐ท๐ฐ๐ฝ๐ฝ๐ด๐ป</b> โบ  https://t.me/msmOTT\n\n<b>๐ผ๐พ๐๐ธ๐ด ๐ถ๐๐พ๐๐ฟ โบโบ https://t.me/msmOTT</b>\n\n<b>๐ฝ๐ด๐ ๐๐ด๐ป๐ด๐ฐ๐๐ด โบโบ https://t.me/+4fYWefZL12U1YjZl</b>"
MOVIE = "เดธเดฟเดจเดฟเดฎ เดเดตเดฟเดเต เดฒเดญเดฟเดเตเดเดฟเดฒเตเดฒ..  เด เดเตเดฐเตเดชเตเดชเดฟเตฝ เดธเดฟเดจเดฟเดฎเดฏเตเดเต Correct Name เดเดเดฟเดเตเดเดพเตฝ เดธเดฟเดจเดฟเดฎ เดเดฟเดเตเดเตเด <b>๐ผ๐๐ผ ๐ฒ๐ท๐ฐ๐ โบโบ https://t.me/MSMchat</b>"
# -- Constants End -- #


@Client.on_message(filters.command("alive", COMMAND_HAND_LER) & f_onw_fliter)
async def check_alive(_, message):
    await message.reply_text(ALIVE)


@Client.on_message(filters.command("ping", COMMAND_HAND_LER) & f_onw_fliter)
async def ping(_, message):
    start_t = time.time()
    rm = await message.reply_text("...")
    end_t = time.time()
    time_taken_s = (end_t - start_t) * 1000
    await rm.edit(f"Pong!\n{time_taken_s:.3f} ms")


@Client.on_message(filters.command("admin", COMMAND_HAND_LER) & f_onw_fliter)
async def repo(_, message):
    await message.reply_text(ADMIN)


@Client.on_message(filters.command("group", COMMAND_HAND_LER) & f_onw_fliter)
async def group(_, message):
    await message.reply_text(GROUP)


@Client.on_message(filters.command("channel", COMMAND_HAND_LER) & f_onw_fliter)
async def channel(_, message):
    await message.reply_text(CHANNEL)


@Client.on_message(filters.command("movie", COMMAND_HAND_LER) & f_onw_fliter)
async def ajax(_, message):
    await message.reply_text(MOVIE)


